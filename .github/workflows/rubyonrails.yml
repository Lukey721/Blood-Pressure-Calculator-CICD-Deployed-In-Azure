# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: Ruby on Rails CI

on:
  push:
    branches:
      - master
      - development
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.2.2 # Specify the Ruby version you're using
        bundler-cache: true # Enable bundler caching for faster builds

    - name: Verify Ruby Version and Permissions
      run: |
        chmod +x bin/*
        sed -i 's/ruby.exe/ruby/' bin/*

    - name: Install dependencies
      env:
        RAILS_ENV: test
      run: |
        bundle install --jobs 4 --retry 3
      #simplecov will run under this also 
    - name: Run RSpec tests
      env:
        RAILS_ENV: test
      run: |
        bundle exec rspec

    - name: Run BDD tests
      env:
        RAILS_ENV: test
      run: bin/rails cucumber  

    - name: Run RuboCop
      env:
        RAILS_ENV: test
      run: bundle exec rubocop --fail-level=error # only show errors

    - name: Run Dependency Vulnerability Scanning
      run: bundle exec bundler-audit check --update

    - name: Run E2E tests
      env:
        RAILS_ENV: test
      run: |
        bundle exec rspec spec/features/homepage_spec.rb --format RspecJunitFormatter --out test-results/e2etests.xml
        mkdir -p test-results

    - name: Publish Test Results
      uses: actions/upload-artifact@v4
      with:
        name: Capybara E2E Tests
        path: test-results/e2etests.xml

    - name: Pull Docker image for K6
      run: docker pull grafana/k6
  
    - name: Run K6 Load Test
      run: |
        docker run -i --rm \
          -v ${{ github.workspace }}/K6tests:/tests \
          grafana/k6 run /tests/perf_test2.js > k6report.txt
  
    - name: Upload K6 Report
      uses: actions/upload-artifact@v4
      with:
        name: k6report
        path: k6report.txt

    # Pull the ZAP Docker image
    - name: Pull Docker image for ZAP
      run: docker pull zaproxy/zap-weekly

    # Ensure zapreport directory exists and set permissions
    - name: Ensure zapreport directory exists and set permissions
      run: |
        mkdir -p ${{ github.workspace }}/zapreport
        chmod -R 777 ${{ github.workspace }}/zapreport

    # Run ZAP baseline scan
    - name: Run baseline scan
      run: |
        docker run --rm --user root \
         -v ${{ github.workspace }}:/zap/wrk/:rw \
         -t zaproxy/zap-weekly \
         zap-baseline.py -t "https://bloodpressurecicd.azurewebsites.net/" -I -r /zap/wrk/zapreport/zapreport.html

    - name: List files in /zap/wrk directory (after scan)
      run: |
        docker run --rm --user root \
          -v ${{ github.workspace }}:/zap/wrk/:rw \
          -t zaproxy/zap-weekly \
          bash -c "ls -l /zap/wrk/"
       
      # Upload ZAP report as an artifact
    - uses: actions/upload-artifact@v4
      name: Upload ZAP report
      with:
       name: ZAPreport
       path: ${{ github.workspace }}/zapreport/zapreport.html


