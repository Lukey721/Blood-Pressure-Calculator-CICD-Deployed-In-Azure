name: Azure CI/CD to Staging/Development

on:
  push:
    branches:
      - development 
      - testing
      

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3 

    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2 

    - name: Build and push Docker image to registry
      run: |
        docker build -t ${{ secrets.REGISTRY_USERNAME }}.azurecr.io/blood-pressure-app:latest .
        echo ${{ secrets.REGISTRY_PASSWORD }} | docker login ${{ secrets.REGISTRY_USERNAME }}.azurecr.io -u ${{ secrets.REGISTRY_USERNAME }} --password-stdin
        docker push ${{ secrets.REGISTRY_USERNAME }}.azurecr.io/blood-pressure-app:latest

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.AZURE_APP_NAME }}  # this is now updated
        images: ${{ secrets.REGISTRY_USERNAME }}.azurecr.io/blood-pressure-app:latest  # Docker image location in  registry


    # Run the Selenium E2E Tests
  run-tests:
    needs: build-and-deploy
    runs-on: ubuntu-latest

    steps:
    # Checkout the code again for the test job
    - name: Checkout code
      uses: actions/checkout@v3 

    # Set up a standalone Chrome container for Selenium to test in
    - name: Start Selenium Standalone Chrome
      run: |
        docker run -d --name selenium -p 4444:4444 selenium/standalone-chrome:latest

    # Install test dependencies for selenium
    - name: Install test dependencies
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y chromium-driver
        bundle install --without production
        export SELENIUM_URL=http://localhost:4444/wd/hub

    # Run the Selenium tests
    - name: Run E2E Tests
      run: |
        export BASE_URL=https://bloodpressurecicd.azurewebsites.net/
        bundle exec rspec --format RspecJunitFormatter --out test-results/rspec.xml

    # Publish the Test Results
    - name: Publish Test Results
      uses: actions/upload-artifact@v3
      with:
        name: rspec-results
        path: test-results/rspec.xml
